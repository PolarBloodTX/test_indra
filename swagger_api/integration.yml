openapi: 3.0.0
info:
  title: API Serverless - Test INDRA
  description: Documentación de la API SwaggerHub para Reto técnico.
  version: 1.0.0

paths:
  /films:
    get:
      summary: Obtener lista de todas las películas
      responses:
        '200':
          description: Lista de películas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /films/{id}:
    get:
      summary: Obtener una película por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Información de la película
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Película no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'

  /people:
    get:
      summary: Obtener lista de todas las personas
      responses:
        '200':
          description: Lista de personas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /people/{id}:
    get:
      summary: Obtener una persona por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Información de la persona
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Persona no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customer:
    get:
      summary: Obtener lista de todos los clientes
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear un nuevo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateFormResponse'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/{id}:
    get:
      summary: Obtener un cliente por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Información del cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFormResponse'
        '500':
          description: Error servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    

components:
  schemas:
    Film:
      type: object
      properties:
        Titulo:
          type: string
          example: "A New Hope"
        N° Episodio:
          type: integer
          example: 4
        Ratreo de apertura:
          type: string
          example: "It is a period of civil war. Rebel spaceships, striking from a hidden base..."
        Director:
          type: string
          example: "George Lucas"
        Productor:
          type: string
          example: "Gary Kurtz, Rick McCallum"
        Fecha de estreno:
          type: string
          format: date
          example: "1977-05-25"
        Personajes:
          type: array
          items:
            type: string
          example: []
        Planetas:
          type: array
          items:
            type: string
          example: []
        Naves estelares:
          type: array
          items:
            type: string
          example: []
        Vehículos:
          type: array
          items:
            type: string
          example: []
        Especies:
          type: array
          items:
            type: string
          example: []
        Creado:
          type: string
          format: date-time
          example: "2014-12-10T14:23:31.880000Z"
        Editado:
          type: string
          format: date-time
          example: "2014-12-20T19:49:45.256000Z"
        URL:
          type: string
          format: uri
          example: "https://swapi.py4e.com/api/films/1/"

    Person:
      type: object
      properties:
        Nombre:
          type: string
          example: "Luke Skywalker"
        Altura:
          type: string
          example: "172"
        Masa:
          type: string
          example: "77"
        Color de cabello:
          type: string
          example: "blond"
        Color de piel:
          type: string
          example: "fair"
        Color de ojos:
          type: string
          example: "blue"
        Año de nacimiento:
          type: string
          example: "19BBY"
        Genero:
          type: string
          example: "male"
        Mundo natal:
          type: string
          format: uri
          example: "https://swapi.py4e.com/api/planets/1/"
        Películas:
          type: array
          items:
            type: string
          example: []
        Especies:
          type: array
          items:
            type: string
          example: []
        Vehículos:
          type: array
          items:
            type: string
          example: []
        Naves estelares:
          type: array
          items:
            type: string
          example: []
        Creado:
          type: string
          format: date-time
          example: "2014-12-09T13:50:51.644000Z"
        Editado:
          type: string
          format: date-time
          example: "2014-12-20T21:17:56.891000Z"
        URL:
          type: string
          format: uri
          example: "https://swapi.py4e.com/api/people/1/"

    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Alem"
        lastname:
          type: string
          example: "Garcia Aranda"
        gender:
          type: string
          example: "F"
        email:
          type: string
          format: email
          example: "alexander@gmail.com"
        phone:
          type: string
          example: "123456789"
    
    ErrorFormResponse:
      type: object
      properties:
        resp_cod:
          type: integer
          example: 1
        resp_msg:
          type: string
          example: "value is incorrect"
        data:
          type: array
          items: {}
          example: []

    ErrorResponse:
      type: object
      properties:
        resp_cod:
          type: integer
          example: -1
        resp_msg:
          type: string
          example: "error service provider"
        data:
          type: array
          items: {}
          example: []

    ValidateFormResponse:
      type: object
      properties:
        resp_cod:
          type: integer
          example: 1
        resp_msg:
          type: string
          example: "error en validar los campos obligatorios"
        data:
          type: array
          items: {}
          example: []
  
    NotFoundResponse:
        type: object
        properties:
          resp_cod:
            type: integer
            example: 2
          resp_msg:
            type: string
            example: "data not found"
          data:
            type: array
            items: {}
            example: []
servers:
  - description: SwaggerHub API - Integración INDRA
    url: https://virtserver.swaggerhub.com/ALEXANDERGARCIA789/servertest_indra/1.0.0